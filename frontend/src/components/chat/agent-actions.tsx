/**
 * Agent Actions Component
 * Handles the execution of actions generated by AI agents
 */

import React from 'react';
import { FileText, Calendar, FolderPlus, Search, ExternalLink } from 'lucide-react';
import { cn } from '@/lib/utils';

export interface AgentAction {
  type: 'create_document' | 'create_matter' | 'create_deadline' | 'search';
  label: string;
  data: any;
}

interface AgentActionsProps {
  actions: AgentAction[];
  onActionExecute?: (action: AgentAction) => void;
  className?: string;
}

const AgentActions: React.FC<AgentActionsProps> = ({
  actions,
  onActionExecute,
  className,
}) => {
  if (!actions || actions.length === 0) {
    return null;
  }

  const getActionIcon = (type: AgentAction['type']) => {
    switch (type) {
      case 'create_document':
        return <FileText className="h-3 w-3" />;
      case 'create_matter':
        return <FolderPlus className="h-3 w-3" />;
      case 'create_deadline':
        return <Calendar className="h-3 w-3" />;
      case 'search':
        return <Search className="h-3 w-3" />;
      default:
        return <ExternalLink className="h-3 w-3" />;
    }
  };

  const getActionColor = (type: AgentAction['type']) => {
    switch (type) {
      case 'create_document':
        return 'bg-blue-500 hover:bg-blue-600 text-white';
      case 'create_matter':
        return 'bg-green-500 hover:bg-green-600 text-white';
      case 'create_deadline':
        return 'bg-orange-500 hover:bg-orange-600 text-white';
      case 'search':
        return 'bg-purple-500 hover:bg-purple-600 text-white';
      default:
        return 'bg-gray-500 hover:bg-gray-600 text-white';
    }
  };

  const handleActionClick = (action: AgentAction) => {
    onActionExecute?.(action);
    
    // Default action handling
    switch (action.type) {
      case 'create_document':
        console.log('Creating document:', action.data);
        // In a real app, this would navigate to the document editor
        // or open a document creation modal
        break;
      case 'create_matter':
        console.log('Creating matter:', action.data);
        // In a real app, this would navigate to the matter view
        // or open a matter creation modal
        break;
      case 'create_deadline':
        console.log('Creating deadline:', action.data);
        // In a real app, this would open the calendar/deadline view
        break;
      case 'search':
        console.log('Performing search:', action.data);
        // In a real app, this would execute a search query
        break;
    }
  };

  return (
    <div className={cn('flex flex-wrap gap-2 mt-2', className)}>
      {actions.map((action, index) => (
        <button
          key={index}
          onClick={() => handleActionClick(action)}
          className={cn(
            'inline-flex items-center gap-1 px-2 py-1 text-xs rounded transition-colors',
            getActionColor(action.type)
          )}
          title={`Execute: ${action.label}`}
        >
          {getActionIcon(action.type)}
          <span>{action.label}</span>
        </button>
      ))}
    </div>
  );
};

export default AgentActions;